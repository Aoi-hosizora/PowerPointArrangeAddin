<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnAlignBottom" xml:space="preserve">
    <value>下揃え</value>
  </data>
  <data name="btnAlignCenter" xml:space="preserve">
    <value>左右中央揃え</value>
  </data>
  <data name="btnAlignLeft" xml:space="preserve">
    <value>左揃え</value>
  </data>
  <data name="btnAlignMiddle" xml:space="preserve">
    <value>上下中央揃え</value>
  </data>
  <data name="btnAlignRight" xml:space="preserve">
    <value>右揃え</value>
  </data>
  <data name="btnAlignTop" xml:space="preserve">
    <value>上揃え</value>
  </data>
  <data name="btnAutofitOff" xml:space="preserve">
    <value>自動調整なし</value>
  </data>
  <data name="btnAutofitText" xml:space="preserve">
    <value>テキストを自動調整</value>
    <comment>はみ出す場合だけ自動調整</comment>
  </data>
  <data name="btnAutoResize" xml:space="preserve">
    <value>図形を自動調整</value>
    <comment>テキストに合わせて図形のサイズを調整</comment>
  </data>
  <data name="btnDistributeHorizontal" xml:space="preserve">
    <value>左右に整列</value>
  </data>
  <data name="btnDistributeVertical" xml:space="preserve">
    <value>上下に整列</value>
  </data>
  <data name="btnExtendSameBottom" xml:space="preserve">
    <value>同じ下端に伸ばす</value>
  </data>
  <data name="btnExtendSameLeft" xml:space="preserve">
    <value>同じ左端に伸ばす</value>
  </data>
  <data name="btnExtendSameRight" xml:space="preserve">
    <value>同じ右端に伸ばす</value>
  </data>
  <data name="btnExtendSameTop" xml:space="preserve">
    <value>同じ上端に伸ばす</value>
  </data>
  <data name="btnFlipHorizontal" xml:space="preserve">
    <value>左右反転</value>
  </data>
  <data name="btnFlipVertical" xml:space="preserve">
    <value>上下反転</value>
  </data>
  <data name="btnGroup" xml:space="preserve">
    <value>グループ化</value>
  </data>
  <data name="btnMoveBack" xml:space="preserve">
    <value>最背面へ移動</value>
  </data>
  <data name="btnMoveBackward" xml:space="preserve">
    <value>背面へ移動</value>
  </data>
  <data name="btnMoveForward" xml:space="preserve">
    <value>前面へ移動</value>
  </data>
  <data name="btnMoveFront" xml:space="preserve">
    <value>最前面へ移動</value>
  </data>
  <data name="btnResetMarginHorizontal" xml:space="preserve">
    <value>左右余白をリセット</value>
  </data>
  <data name="btnResetMarginVertical" xml:space="preserve">
    <value>上下余白をリセット</value>
  </data>
  <data name="btnRotateLeft90" xml:space="preserve">
    <value>左へ 90 度回転</value>
  </data>
  <data name="btnRotateRight90" xml:space="preserve">
    <value>右へ 90 度回転</value>
  </data>
  <data name="btnScalePosition_Middle" xml:space="preserve">
    <value>中央をアンカーとして伸ばす</value>
  </data>
  <data name="btnScalePosition_TopLeft" xml:space="preserve">
    <value>左上をアンカーとして伸ばす</value>
  </data>
  <data name="btnScaleSameHeight" xml:space="preserve">
    <value>同じ高さに伸ばす</value>
  </data>
  <data name="btnScaleSameSize" xml:space="preserve">
    <value>同じサイズに伸ばす</value>
  </data>
  <data name="btnScaleSameWidth" xml:space="preserve">
    <value>同じ幅に伸ばす</value>
  </data>
  <data name="btnShapePositionCopy" xml:space="preserve">
    <value>位置をコピー</value>
  </data>
  <data name="btnShapePositionPaste" xml:space="preserve">
    <value>位置を貼付</value>
  </data>
  <data name="btnSnapBottom" xml:space="preserve">
    <value>下にスナップ</value>
  </data>
  <data name="btnSnapLeft" xml:space="preserve">
    <value>左にスナップ</value>
  </data>
  <data name="btnSnapRight" xml:space="preserve">
    <value>右にスナップ</value>
  </data>
  <data name="btnSnapTop" xml:space="preserve">
    <value>上にスナップ</value>
  </data>
  <data name="btnUngroup" xml:space="preserve">
    <value>グループ解除</value>
  </data>
  <data name="btnWrapText" xml:space="preserve">
    <value>テキストを折り返す</value>
  </data>
  <data name="edtMarginBottom" xml:space="preserve">
    <value>下余白:</value>
  </data>
  <data name="edtMarginLeft" xml:space="preserve">
    <value>左余白:</value>
  </data>
  <data name="edtMarginRight" xml:space="preserve">
    <value>右余白:</value>
  </data>
  <data name="edtMarginTop" xml:space="preserve">
    <value>上余白:</value>
  </data>
  <data name="edtShapePositionX" xml:space="preserve">
    <value>横:</value>
  </data>
  <data name="edtShapePositionY" xml:space="preserve">
    <value>縦:</value>
  </data>
  <data name="grpArrange" xml:space="preserve">
    <value>配置</value>
  </data>
  <data name="grpShapePosition" xml:space="preserve">
    <value>位置</value>
  </data>
  <data name="grpTextbox" xml:space="preserve">
    <value>テキストボックス</value>
  </data>
</root>